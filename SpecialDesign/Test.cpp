//总结对比一下饿汉和懒汉的区别
//1、懒汉模式需要考虑线程安全和释放的问题，实现相对更复杂，饿汉模式不存在以上问题，实现简单。
//2、懒汉是一种懒加载模式，需要时再初始化创建对象，不会影响程序的启动。
//   饿汉模式则相反，程序启动阶段就创建初始化实例对象，会导致程序启动慢，影响体验。
//3、如果有多个单例类，假设有依赖关系(B依赖A)，要求A单例先创建初始化，B单例再创建初始化，那么就不能用饿汉。
//   因为无法保证创建初始化顺序，这时用懒汉我们就可以手动控制。
//4、实际中懒汉模式还是更实用一些

#include "LazyMan.hpp"
#include "HungryMan.hpp"

int main()
{
	//LazyMan::Test1();
	LazyMan::Test2();

	//HungryMan::Test1();
	HungryMan::Test2();
	return 0;
}
