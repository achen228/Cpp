构造函数是特殊的成员函数，需要注意的是，构造函数的虽然名称叫构造，但是需要注意的是构造函数的主要任务并不是开空间创建对象，而是初始化对象
1. 函数名与类名相同
2. 无返回值
3. 对象实例化时编译器自动调用对应的构造函数
4. 构造函数可以重载
5. 如果类中没有显式定义构造函数，则C++编译器会自动生成一个无参的默认构造函数，一旦用户显式定义编译器将不再生成
6. 无参的构造函数和全缺省的构造函数都称为默认构造函数（不用传参就可以调用的），并且默认构造函数只能有一个。
    注意：无参构造函数、全缺省构造函数、我们没写编译器默认生成的构造函数，都可以认为是默认构造函数。

一般用全缺省的构造函数 

编译器对基本类型不做处理，但对自定义类型->初始化==调用它的构造函数

// 构造函数
#include <iostream>
using namespace std;

class Date 
{
public:    
	//// 1.无参构造函数    
	//Date ()    
	//{}        
	//// 2.带参构造函数    
	//Date (int year, int month , int day )    
	//{        
	//	_year = year ;        
	//	_month = month ;        
	//	_day = day ;    
	//} 

	// 3.一般用全缺省的构造函数
	Date(int year = 1900, int month = 1, int day = 1)
	{
		_year = year;
		_month = month;
		_day = day;
	}

private :    
	int _year ;    
	int _month ;    
	int _day ; 
};

void TestDate() 
{
	// 调用无参构造函数  
	Date d1; 
	// 调用带参的构造函数  
	Date d2 (2015, 1, 1); 
	// 注意：如果通过无参构造函数创建对象时，对象后面不用跟括号，否则就成了函数声明   
	Date d3(); 
}

int main()
{
	TestDate();

	system("pause");
	return 0;
}
